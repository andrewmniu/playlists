name: Daily Spotify Playlist Update

on:
  schedule:
    # Trigger at both 7:00 and 8:00 UTC every day.
    - cron: '0 7,8 * * *'
  
  # MODIFIED: Add an 'input' to the manual trigger
  workflow_dispatch:
    inputs:
      force_run:
        description: 'Force run scripts regardless of time'
        required: true
        type: boolean
        default: false

jobs:
  update-playlists:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Check Time in Target Timezone
        id: check_time
        run: |
          python <<EOF
          import os
          from datetime import datetime
          import pytz

          tz = pytz.timezone('America/Los_Angeles')
          local_time = datetime.now(tz)
          
          print(f'Current time in {tz} is {local_time.strftime("%Y-%m-%d %H:%M:%S")}')
          
          should_run = local_time.hour == 0

          if should_run:
              print("It's midnight. Proceeding with the job.")
          else:
              print("It's not midnight yet. Skipping the rest of the job.")
          
          with open(os.environ['GITHUB_OUTPUT'], 'a') as f:
              print(f'should_run={str(should_run).lower()}', file=f)
          EOF

      - name: Run On This Day script
        if: (github.event_name == 'schedule' && steps.check_time.outputs.should_run == 'true') || (github.event_name == 'workflow_dispatch' && github.event.inputs.force_run == true)
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}
        run: python on_this_day.py

      - name: Run Random Day script
        if: (github.event_name == 'schedule' && steps.check_time.outputs.should_run == 'true') || (github.event_name == 'workflow_dispatch' && github.event.inputs.force_run == true)
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}
        run: python random_day.py